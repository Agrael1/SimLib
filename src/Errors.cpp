#include <Errors.h>
#include <version.h>

constexpr std::string_view Errors[] = {
    /* 0 */ "SIMLIB/C++ Simulation Library, " SIMLIB_COPYRIGHT,
    /* 1 */ "Undocumented error",
    /* 2 */ "Internal error",
    /* 3 */ "No memory",
    /* 4 */ "Bad Init() arguments",
    /* 5 */ "Init() called twice before Run()",
    /* 6 */ "Init() can not be called during simulation run",
    /* 7 */ "Run() should be called after Init()",
    /* 8 */ "Bad SetStep(min,max) arguments",
    /* 9 */ "Requested integration step is too small",
    /* 10 */ "SetStep: Too big difference of min/max step",
    /* 11 */ "SetAccuracy: Too small relative accuracy requested",
    /* 12 */ "Special function called and simulation is not running",
    /* 13 */ "Numerical integration error greater than requested",
    /* 14 */ "Bad reference to list item",
    /* 15 */ "Deleted item is linked in some list",
    /* 16 */ "Removed item not in list",
    /* 17 */ "Calendar should be singleton",
    /* 18 */ "Deleting active item in calendar",
    /* 19 */ "Scheduling before current Time",
    /* 20 */ "Calendar is empty",
    /* 21 */ "Procesis is not initialized",
    /* 22 */ "Bad histogram step (step<=0)",
    /* 23 */ "Bad histogram interval count (max=10000)",
    /* 24 */ "List does not have active item",
    /* 25 */ "Empty list",
    /* 26 */ "Bad queue reference",
    /* 27 */ "Empty WaitUntilList - can't Get() (internal error)",
    /* 28 */ "Bad entity reference",
    /* 29 */ "Entity not scheduled",
    /* 30 */ "Time statistic not initialized",
    /* 31 */ "Can't create new integrator in dynamic section",
    /* 32 */ "Can't destroy integrator in dynamic section",
    /* 33 */ "Can't create new status variable in dynamic section",
    /* 34 */ "Can't destroy status variable in dynamic section",
    /* 35 */ "Seize(): Can't interrupt facility service",
    /* 36 */ "Release(): Facility is released by other than currently serviced process",
    /* 37 */ "Release(): Can't release empty facility",
    /* 38 */ "Enter() request exceeded the store capacity",
    /* 39 */ "Leave() leaves more than currently used",
    /* 40 */ "SetCapacity(): can't reduce store capacity",
    /* 41 */ "SetQueue(): deleted (old) queue is not empty",
    /* 42 */ "Weibul(): lambda<=0.0 or alfa<=1.0",
    /* 43 */ "Erlang(): beta<1",
    /* 44 */ "NegBin(): q<=0 or k<=0",
    /* 45 */ "NegBinM(): m<=0",
    /* 46 */ "NegBinM(): p not in range 0..1",
    /* 47 */ "Poisson(lambda): lambda<=0",
    /* 48 */ "Geom(): q<=0",
    /* 49 */ "HyperGeom(): m<=0",
    /* 50 */ "HyperGeom(): p not in range 0..1",
    /* 51 */ "Can't write output file",
    /* 52 */ "Output file can't be open between Init() and Run()",
    /* 53 */ "Can't open output file",
    /* 54 */ "Can't close output file",
    /* 55 */ "Algebraic loop detected",
    /* 56 */ "Parameter low>=high",
    /* 57 */ "Parameter of quantizer <= 0",
    /* 58 */ "Library and header (simlib.h) version mismatch ",
    /* 59 */ "Semaphore::V() -- bad call",
    /* 60 */ "Uniform(l,h) -- bad arguments",
    /* 61 */ "Stat::MeanValue()  No record in statistics",
    /* 62 */ "Stat::Disp()  Can't compute (n<2)",
    /* 63 */ "AlgLoop: t_min>=t_max",
    /* 64 */ "AlgLoop: t0 not in  <t_min,t_max>",
    /* 65 */ "AlgLoop: method not convergent",
    /* 66 */ "AlgLoop: iteration limit exceeded",
    /* 67 */ "AlgLoop: iterative block is not in loop",
    /* 68 */ "Unknown integration method",
    /* 69 */ "Integration method name not unique",
    /* 70 */ "Integration step <=0",
    /* 71 */ "Start-method is not single-step",
    /* 72 */ "Method is not multi-step",
    /* 73 */ "Can't switch methods in dynamic section",
    /* 74 */ "Can't switch start-methods in dynamic section",
    /* 75 */ "Rline: argument n<2",
    /* 76 */ "Rline: array is not sorted",
    /* 77 */ "Library compiled without debugging support",
    /* 78 */ "Dealy is too small (<=MaxStep)",
    /* 79 */ "Parameter can not be changed during simulation run",
    /* 80 */ "General error",
};

std::string_view ErrMsg(Error errc)
{
    return Errors[size_t(errc)];
};